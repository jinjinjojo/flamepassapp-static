/**
 * Game Page Handler (Fixed V3)
 * Specifically handles the games page content and authentication,
 * while still loading games in the background
 */

// Wait for DOM to be ready
document.addEventListener('DOMContentLoaded', function() {
  // Check if this is the games page
  if (window.location.pathname !== '/g.html') return;
  
  console.log("Game page handler initialized");
  
  // Check if user is logged in
  const loggedIn = typeof isLoggedIn === 'function' ? isLoggedIn() : false;
  
  if (!loggedIn) {
    // Protect the page but still load games in background
    protectGamesPage();
  }
});

// Protect games page functionality for non-logged-in users
function protectGamesPage() {
  console.log("Protecting games page");
  
  // 1. DO NOT intercept fetch requests - allow games to load in background
  // Instead, we'll use the overlay to prevent interaction
  
  // 2. Create black overlay for the container
  const gameContainer = document.querySelector('.gameContain');
  if (gameContainer) {
    // Position the container properly
    gameContainer.style.position = 'relative';
    
    // Create black overlay for entire container
    const blackOverlay = document.createElement('div');
    blackOverlay.className = 'games-black-overlay';
    blackOverlay.style.position = 'absolute';
    blackOverlay.style.top = '0';
    blackOverlay.style.left = '0';
    blackOverlay.style.width = '100%';
    blackOverlay.style.height = '100vh'; // Full height
    blackOverlay.style.backgroundColor = 'rgba(0, 0, 0, 0.85)';
    blackOverlay.style.zIndex = '50';
    
    // Prevent scrolling
    blackOverlay.style.overflow = 'hidden';
    document.body.style.overflow = 'hidden';
    
    // Add the black overlay to the page
    document.body.appendChild(blackOverlay);
    
    // Create lock message container
    const lockMessage = document.createElement('div');
    lockMessage.className = 'locked-content-message';
    lockMessage.style.position = 'absolute';
    lockMessage.style.top = '50%';
    lockMessage.style.left = '50%';
    lockMessage.style.transform = 'translate(-50%, -50%)';
    lockMessage.style.textAlign = 'center';
    lockMessage.style.padding = '100px 0px 50px 60px';
    lockMessage.style.maxWidth = '500px';
    lockMessage.style.zIndex = '60';
    
    // Lock icon
    const lockIcon = document.createElement('div');
    lockIcon.innerHTML = '<i class="fa-solid fa-lock"></i>';
    lockIcon.style.fontSize = '50px';
    lockIcon.style.color = '#de5c34';
    lockIcon.style.marginBottom = '20px';
    
    // Lock text
    const lockText = document.createElement('div');
    lockText.textContent = 'Please login to access Flamepass Games.';
    lockText.style.fontSize = '20px';
    lockText.style.color = 'white';
    lockText.style.marginBottom = '20px';
    
    // Login button
    const loginButton = document.createElement('button');
    loginButton.textContent = 'Get Started';
    loginButton.className = 'btn';
    loginButton.style.display = 'inline-block';
    loginButton.style.backgroundColor = '#de5c34';
    loginButton.style.color = 'white';
    loginButton.style.border = 'none';
    loginButton.style.borderRadius = '6px';
    loginButton.style.padding = '10px 20px';
    loginButton.style.cursor = 'pointer';
    loginButton.style.fontSize = '16px';
    loginButton.style.fontWeight = '600';
    loginButton.style.transition = 'background-color 0.3s';
    
    // Add hover effect
    loginButton.addEventListener('mouseenter', () => {
      loginButton.style.backgroundColor = '#ff8033';
    });
    
    loginButton.addEventListener('mouseleave', () => {
      loginButton.style.backgroundColor = '#de5c34';
    });
    
    // Add click event to show login popup
    loginButton.addEventListener('click', function() {
      if (typeof showLoginPopup === 'function') {
        showLoginPopup();
      } else {
        window.location.href = '/login.html';
      }
    });
    
    // Assemble message
    lockMessage.appendChild(lockIcon);
    lockMessage.appendChild(lockText);
    lockMessage.appendChild(loginButton);
    
    // Add message to the black overlay
    blackOverlay.appendChild(lockMessage);
    
    // 3. Disable game search input
    const gameSearchInput = document.querySelector('.gameSearchInput');
    if (gameSearchInput) {
      gameSearchInput.placeholder = "Log in to search for games...";
      gameSearchInput.disabled = true;
      gameSearchInput.addEventListener('click', function(e) {
        e.preventDefault();
        if (typeof showLoginPopup === 'function') {
          showLoginPopup();
        }
      });
    }
    
    // 4. Disable the random game button
    const randomBtn = document.querySelector('.randomBtn');
    if (randomBtn) {
      randomBtn.addEventListener('click', function(e) {
        e.preventDefault();
        if (typeof showLoginPopup === 'function') {
          showLoginPopup();
        }
      });
    }
    
    // 5. Make sure the overlay handles all clicks
    blackOverlay.addEventListener('click', function(e) {
      // Only handle if not clicking the login button directly
      if (e.target !== loginButton) {
        e.preventDefault();
        e.stopPropagation();
        
        if (typeof showLoginPopup === 'function') {
          showLoginPopup();
        } else {
          window.location.href = '/login.html';
        }
      }
    });
    
    // 6. Make sure the sidebar is still usable
    ensureSidebarFunctional();
  }
}

// Make sure the sidebar navigation still works
function ensureSidebarFunctional() {
  // Adjust z-index of sidebar to be above the overlay
  const sidebar = document.querySelector('.sidebar, .nav-sidebar, #sidebar, nav');
  if (sidebar) {
    sidebar.style.zIndex = '1000';
    sidebar.style.position = 'relative';
  }
  
  // Make sure all sidebar links are clickable
  const sidebarLinks = document.querySelectorAll('.sidebar a, .nav-sidebar a, #sidebar a, nav a');
  sidebarLinks.forEach(link => {
    link.style.position = 'relative';
    link.style.zIndex = '1001';
  });
  
  // Check for any specific sidebar buttons and ensure they work
  const navButtons = document.querySelectorAll('.sidebar-button, .nav-button');
  navButtons.forEach(button => {
    button.style.position = 'relative';
    button.style.zIndex = '1001';
  });
}

// Also run when window is fully loaded (for dynamic content)
window.addEventListener('load', function() {
  // Check if this is the games page
  if (window.location.pathname !== '/g.html') return;
  
  // Second check in case content loaded dynamically
  const loggedIn = typeof isLoggedIn === 'function' ? isLoggedIn() : false;
  
});